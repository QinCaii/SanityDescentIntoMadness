name: Build and Release Minecraft Mod

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'temurin'

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Build with Gradle
      run: ./gradlew build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build
        path: build/libs/*.jar

    - name: Generate and push tag
      id: generate_tag
      run: |
        # Start with version 0.0.1
        VERSION="0.0.1"
        
        # Loop until a new tag can be created
        while true; do
          TAG_NAME="v$VERSION"
          if git ls-remote --tags origin | grep -q "refs/tags/$TAG_NAME$"; then
            echo "Tag $TAG_NAME already exists, incrementing version"
            IFS='.' read -r -a VERSION_PARTS <<< "$VERSION"
            MAJOR=${VERSION_PARTS[0]}
            MINOR=${VERSION_PARTS[1]}
            PATCH=${VERSION_PARTS[2]}
            PATCH=$((PATCH + 1))
            VERSION="$MAJOR.$MINOR.$PATCH"
          else
            echo "Generated new tag: $TAG_NAME"
            break
          fi
        done
        
        # Create and push the new tag
        git config --local user.name "GitHub Action"
        git config --local user.email "action@github.com"
        git tag -a "$TAG_NAME" -m "Version $VERSION"
        git push origin "$TAG_NAME"
        
        # Set output for the next steps
        echo "::set-output name=tag_name::$TAG_NAME"

    - name: Publish to GitHub Releases
      uses: ncipollo/release-action@v1
      with:
        artifacts: build/libs/*.jar
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: "${{ steps.generate_tag.outputs.tag_name }}"
        name: "Release ${{ steps.generate_tag.outputs.tag_name }}"
        body: "Automated release for version ${{ steps.generate_tag.outputs.tag_name }}"
